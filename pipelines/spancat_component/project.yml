title: "Example project of span cat"
description: "This example project shows how to implement a spaCy component with a custom Machine Learning model."

# Variables can be referenced across the project.yml using ${vars.var_name}
vars:
  config: "configs/config.cfg"
  train: "assets/train.spacy"
  dev: "assets/dev.spacy"
  model: "training/model-best"
  gpu: 0

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["scripts", "configs", "assets", "training"]

# Assets that should be downloaded or available in the directory. You can replace
# this with your own input data.
assets:
    - dest: ${vars.train}
      description: "Gold-standard REL annotations created with Prodigy for training"
    - dest: ${vars.dev}
      description: "Gold-standard REL annotations created with Prodigy for development"

workflows:
  all:
    - train


# Project commands, specified in a style similar to CI config files (e.g. Azure
# pipelines). The name is the command name that lets you trigger the command
# via "spacy project run [command] [path]". The help message is optional and
# shown when executing "spacy project run [optional command] [path] --help".
commands:

  - name: "train"
    help: "Train the Spancat model and evaluate on the dev corpus."
    script:
      - "python -m spacy train ${vars.config} --output training --paths.train ${vars.train} --paths.dev ${vars.dev} --gpu-id ${vars.gpu}"
    deps:
      - ${vars.config}
      - ${vars.train}
      - ${vars.dev}
    outputs:
      - ${vars.model}





  







